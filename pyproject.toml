[project]
name = "osos"
version = "0.1.0"
description = "Introductory Python for TAMU OSOS 2025"
readme = "README.md"
authors = [
    { name = "Dan Drennan", email = "danjdrennan@gmail.com" },
    { name = "Trevor Millar", email = "" }
]
requires-python = ">=3.10"
dependencies = [
    "ipykernel>=6.30.1",
    "matplotlib>=3.10.6",
    "pandas>=2.3.2",
    "pip>=25.2",
    "scikit-learn>=1.7.2",
    "seaborn>=0.13.2",
    "statsmodels>=0.14.5",
]

[build-system]
requires = ["uv_build>=0.8.13,<0.9.0"]
build-backend = "uv_build"

# This is an editor configuration for the `basedpyright` language server. See
# more info at
#
#   https://docs.basedpyright.com/v1.20.0/configuration/config-files/
#
[tool.basedpyright]
typeCheckingMode = "basic"

# NOTE(dan): This is all copy/pasted from
#
#   https://docs.astral.sh/ruff/configuration
#
# Ruff is a code formatting tool that can run automatically to standardize the
# format of your code.
[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.10
target-version = "py310"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`) codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[dependency-groups]
dev = [
    "pytest>=8.4.1",
]
